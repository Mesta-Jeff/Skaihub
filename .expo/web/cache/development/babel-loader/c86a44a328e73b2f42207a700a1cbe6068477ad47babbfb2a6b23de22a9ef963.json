{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LandingScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    age = _useState4[0],\n    setAge = _useState4[1];\n  var handlePress = function handlePress() {\n    console.log('Submitted:', {\n      username: username,\n      age: age\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.headerText,\n      children: \"Welcome to Sander\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Username\",\n      value: username,\n      onChangeText: function onChangeText(text) {\n        return setUsername(text);\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Age\",\n      keyboardType: \"numeric\",\n      value: age,\n      onChangeText: function onChangeText(text) {\n        return setAge(text);\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.buttonStyles,\n      onPress: handlePress,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Submit\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  headerText: {\n    fontWeight: 'bold',\n    color: '#008080',\n    marginBottom: 20,\n    marginTop: 20,\n    fontSize: 24,\n    paddingHorizontal: 10,\n    textAlign: 'center'\n  },\n  input: {\n    height: 50,\n    width: '80%',\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    paddingHorizontal: 10,\n    borderRadius: 10\n  },\n  buttonStyles: {\n    backgroundColor: '#008080',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 5\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","Text","TextInput","View","Button","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","LandingScreen","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","age","setAge","handlePress","console","log","style","styles","container","children","headerText","input","placeholder","value","onChangeText","text","keyboardType","buttonStyles","onPress","buttonText","create","flex","backgroundColor","alignItems","justifyContent","fontWeight","color","marginBottom","marginTop","fontSize","paddingHorizontal","textAlign","height","width","borderColor","borderWidth","borderRadius","paddingVertical"],"sources":["/home/jeff/Documents/java/Skaihub/screens/landing.js"],"sourcesContent":["\n\n// import React, { useState } from 'react';\n// import { StatusBar } from 'expo-status-bar';\n// import { StyleSheet, Text, TextInput, View, Button, TouchableOpacity } from 'react-native';\n\n// export default function App() {\n//   const [username, setUsername] = useState('');\n//   const [age, setAge] = useState('');\n//   const [phone, setPhone] = useState('');\n//   const [password, setPassword] = useState('');\n\n//   const [loading, setLoading] = useState(false);\n\n//   const handlePress = () => {\n//     setLoading(true);\n\n//     setTimeout(() => {\n//       setLoading(false);\n//     }, 2000); // Simulating a 2-second delay\n    \n//     console.log('Submitted:', { username, age, phone, password });\n//   };\n\n//   return (\n//     <View style={styles.container}>\n//       <Text style={styles.headerText}>\n//         Welcome to Sander\n//       </Text>\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Username\"\n//         value={username}\n//         onChangeText={(text) => setUsername(text)}\n//       />\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Age\"\n//         keyboardType=\"numeric\"\n//         value={age}\n//         onChangeText={(text) => setAge(text)}\n//       />\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Phone\"\n//         keyboardType='phone-pad'\n//         value={phone}\n//         onChangeText={(text) => setPhone(text)}\n//       />\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Password\"\n//         secureTextEntry\n//         value={password}\n//         onChangeText={(text) => setPassword(text)}\n//       />\n\n//       <TouchableOpacity\n//         style={styles.buttonStyles}\n//         onPress={handlePress}\n//         disabled={loading} >\n//         <Text style={styles.buttonText}>{loading ? 'Loading...' : 'Submit'}</Text>\n//       </TouchableOpacity>\n\n//       <StatusBar style=\"auto\" />\n//     </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: '#fff',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//   },\n\n//   input: {\n//     height: 50,\n//     width: '80%',\n//     borderColor: 'gray',\n//     borderWidth: 1,\n//     marginBottom: 10,\n//     paddingHorizontal: 10,\n//     borderRadius: 10,\n//   },\n\n//   headerText: {\n//     fontWeight: 'bold',\n//     color: '#008080',\n//     marginBottom: 20,\n//     marginTop: 20,\n//     fontSize: 24,\n//     paddingHorizontal: 10,\n//     textAlign: 'center',\n//   },\n\n//   buttonStyles: {\n//     marginBottom: 20,\n//     backgroundColor: '#fff',\n//     borderColor: '#008080',\n//     borderWidth: 2,\n//     paddingHorizontal: 20,\n//     paddingVertical: 10,\n//     borderRadius: 5,\n//     opacity: 0.5,\n//   },\n//   buttonText: {\n//     color: '#008080',\n//     fontSize: 16,\n//     fontWeight: 'bold',\n//   },\n\n// });\n\n\n\n\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, TextInput, View, Button, TouchableOpacity } from 'react-native';\n\nexport default function LandingScreen() {\n  const [username, setUsername] = useState('');\n  const [age, setAge] = useState('');\n\n  const handlePress = () => {\n    console.log('Submitted:', { username, age });\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.headerText}>\n        Welcome to Sander\n      </Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Username\"\n        value={username}\n        onChangeText={(text) => setUsername(text)}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Age\"\n        keyboardType=\"numeric\"\n        value={age}\n        onChangeText={(text) => setAge(text)}\n      />\n\n      <TouchableOpacity\n        style={styles.buttonStyles}\n        onPress={handlePress}\n      >\n        <Text style={styles.buttonText}>Submit</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  headerText: {\n    fontWeight: 'bold',\n    color: '#008080',\n    marginBottom: 20,\n    marginTop: 20,\n    fontSize: 24,\n    paddingHorizontal: 10,\n    textAlign: 'center',\n  },\n  input: {\n    height: 50,\n    width: '80%',\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    paddingHorizontal: 10,\n    borderRadius: 10,\n  },\n  buttonStyles: {\n    backgroundColor: '#008080',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 5,\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}