{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      children: _jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          title: 'Home'\n        }\n      })\n    })\n  });\n}\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    age = _useState4[0],\n    setAge = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    phone = _useState6[0],\n    setPhone = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    password = _useState8[0],\n    setPassword = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    loading = _useState10[0],\n    setLoading = _useState10[1];\n  var handlePress = function handlePress() {\n    setLoading(true);\n    setTimeout(function () {\n      setLoading(false);\n      console.log('Submitted:', {\n        username: username,\n        age: age,\n        phone: phone,\n        password: password\n      });\n    }, 2000);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.headerText,\n      children: \"Welcome to Sander\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Username\",\n      value: username,\n      onChangeText: function onChangeText(text) {\n        return setUsername(text);\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.buttonStyles,\n      onPress: handlePress,\n      disabled: loading,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: loading ? 'Loading...' : 'Submit'\n      })\n    }), _jsx(Button, {\n      title: \"Go Home\",\n      onPress: function onPress() {\n        return navigation.navigate('Home');\n      }\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    height: 50,\n    width: '80%',\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    paddingHorizontal: 10,\n    borderRadius: 10\n  },\n  headerText: {\n    fontWeight: 'bold',\n    color: '#008080',\n    marginBottom: 20,\n    marginTop: 20,\n    fontSize: 24,\n    paddingHorizontal: 10,\n    textAlign: 'center'\n  },\n  buttonStyles: {\n    marginBottom: 20,\n    backgroundColor: '#fff',\n    borderColor: '#008080',\n    borderWidth: 2,\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 5,\n    opacity: 0.5\n  },\n  buttonText: {\n    color: '#008080',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","useState","StatusBar","NavigationContainer","createStackNavigator","StyleSheet","Text","TextInput","View","Button","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","Stack","App","children","Navigator","Screen","name","component","HomeScreen","options","title","_ref","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","age","setAge","_useState5","_useState6","phone","setPhone","_useState7","_useState8","password","setPassword","_useState9","_useState10","loading","setLoading","handlePress","setTimeout","console","log","style","styles","container","headerText","input","placeholder","value","onChangeText","text","buttonStyles","onPress","disabled","buttonText","navigate","create","flex","backgroundColor","alignItems","justifyContent","height","width","borderColor","borderWidth","marginBottom","paddingHorizontal","borderRadius","fontWeight","color","marginTop","fontSize","textAlign","paddingVertical","opacity"],"sources":["/home/jeff/Documents/java/Skaihub/screens/landing.js"],"sourcesContent":["\n\n// import React, { useState } from 'react';\n// import { StatusBar } from 'expo-status-bar';\n// import { NavigationContainer } from '@react-navigation/native';\n// import { createStackNavigator } from '@react-navigation/stack';\n// import { StyleSheet, Text, TextInput, View, Button, TouchableOpacity } from 'react-native';\n\n// export default function App() {\n//   const [username, setUsername] = useState('');\n//   const [age, setAge] = useState('');\n//   const [phone, setPhone] = useState('');\n//   const [password, setPassword] = useState('');\n\n//   const [loading, setLoading] = useState(false);\n\n//   const handlePress = () => {\n//     setLoading(true);\n\n//     setTimeout(() => {\n//       setLoading(false);\n//     }, 2000); // Simulating a 2-second delay\n    \n//     console.log('Submitted:', { username, age, phone, password });\n//   };\n\n//   return (\n//     <View style={styles.container}>\n//       <Text style={styles.headerText}>\n//         Welcome to Sander\n//       </Text>\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Username\"\n//         value={username}\n//         onChangeText={(text) => setUsername(text)}\n//       />\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Age\"\n//         keyboardType=\"numeric\"\n//         value={age}\n//         onChangeText={(text) => setAge(text)}\n//       />\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Phone\"\n//         keyboardType='phone-pad'\n//         value={phone}\n//         onChangeText={(text) => setPhone(text)}\n//       />\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Password\"\n//         secureTextEntry\n//         value={password}\n//         onChangeText={(text) => setPassword(text)}\n//       />\n\n//       <TouchableOpacity\n//         style={styles.buttonStyles}\n//         onPress={handlePress}\n//         disabled={loading} >\n//         <Text style={styles.buttonText}>{loading ? 'Loading...' : 'Submit'}</Text>\n//       </TouchableOpacity>\n\n//       <Button title=\"Go Home\" onPress={() => navigation.navigate('Home')} />\n\n//       <StatusBar style=\"auto\" />\n//     </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: '#fff',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//   },\n\n//   input: {\n//     height: 50,\n//     width: '80%',\n//     borderColor: 'gray',\n//     borderWidth: 1,\n//     marginBottom: 10,\n//     paddingHorizontal: 10,\n//     borderRadius: 10,\n//   },\n\n//   headerText: {\n//     fontWeight: 'bold',\n//     color: '#008080',\n//     marginBottom: 20,\n//     marginTop: 20,\n//     fontSize: 24,\n//     paddingHorizontal: 10,\n//     textAlign: 'center',\n//   },\n\n//   buttonStyles: {\n//     marginBottom: 20,\n//     backgroundColor: '#fff',\n//     borderColor: '#008080',\n//     borderWidth: 2,\n//     paddingHorizontal: 20,\n//     paddingVertical: 10,\n//     borderRadius: 5,\n//     opacity: 0.5,\n//   },\n//   buttonText: {\n//     color: '#008080',\n//     fontSize: 16,\n//     fontWeight: 'bold',\n//   },\n\n// });\n\n\n\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { StyleSheet, Text, TextInput, View, Button, TouchableOpacity } from 'react-native';\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name=\"Home\" component={HomeScreen} options={{ title: 'Home' }} />\n        {/* Add other screens here */}\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nfunction HomeScreen({ navigation }) {\n  const [username, setUsername] = useState('');\n  const [age, setAge] = useState('');\n  const [phone, setPhone] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handlePress = () => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      console.log('Submitted:', { username, age, phone, password });\n    }, 2000); // Simulating a 2-second delay\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.headerText}>\n        Welcome to Sander\n      </Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Username\"\n        value={username}\n        onChangeText={(text) => setUsername(text)}\n      />\n      {/* Add other text inputs here */}\n\n      <TouchableOpacity\n        style={styles.buttonStyles}\n        onPress={handlePress}\n        disabled={loading}>\n        <Text style={styles.buttonText}>{loading ? 'Loading...' : 'Submit'}</Text>\n      </TouchableOpacity>\n\n      <Button title=\"Go Home\" onPress={() => navigation.navigate('Home')} />\n\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  input: {\n    height: 50,\n    width: '80%',\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    paddingHorizontal: 10,\n    borderRadius: 10,\n  },\n  headerText: {\n    fontWeight: 'bold',\n    color: '#008080',\n    marginBottom: 20,\n    marginTop: 20,\n    fontSize: 24,\n    paddingHorizontal: 10,\n    textAlign: 'center',\n  },\n  buttonStyles: {\n    marginBottom: 20,\n    backgroundColor: '#fff',\n    borderColor: '#008080',\n    borderWidth: 2,\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 5,\n    opacity: 0.5,\n  },\n  buttonText: {\n    color: '#008080',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}