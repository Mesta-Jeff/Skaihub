{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport { childrenWithOverriddenStyle } from './utils';\nimport PagerViewView, { Commands as PagerViewCommands } from './PagerViewNativeComponent';\nexport var PagerView = function (_React$Component) {\n  function PagerView() {\n    var _this;\n    _classCallCheck(this, PagerView);\n    _this = _callSuper(this, PagerView, arguments);\n    _defineProperty(_this, \"isScrolling\", false);\n    _defineProperty(_this, \"pagerView\", null);\n    _defineProperty(_this, \"_onPageScroll\", function (e) {\n      if (_this.props.onPageScroll) {\n        _this.props.onPageScroll(e);\n      }\n      if (Platform.OS === 'android') {\n        if (_this.props.keyboardDismissMode === 'on-drag') {\n          Keyboard.dismiss();\n        }\n      }\n    });\n    _defineProperty(_this, \"_onPageScrollStateChanged\", function (e) {\n      if (_this.props.onPageScrollStateChanged) {\n        _this.props.onPageScrollStateChanged(e);\n      }\n      _this.isScrolling = e.nativeEvent.pageScrollState === 'dragging';\n    });\n    _defineProperty(_this, \"_onPageSelected\", function (e) {\n      if (_this.props.onPageSelected) {\n        _this.props.onPageSelected(e);\n      }\n    });\n    _defineProperty(_this, \"setPage\", function (selectedPage) {\n      if (_this.pagerView) {\n        PagerViewCommands.setPage(_this.pagerView, selectedPage);\n      }\n    });\n    _defineProperty(_this, \"setPageWithoutAnimation\", function (selectedPage) {\n      if (_this.pagerView) {\n        PagerViewCommands.setPageWithoutAnimation(_this.pagerView, selectedPage);\n      }\n    });\n    _defineProperty(_this, \"setScrollEnabled\", function (scrollEnabled) {\n      if (_this.pagerView) {\n        PagerViewCommands.setScrollEnabledImperatively(_this.pagerView, scrollEnabled);\n      }\n    });\n    _defineProperty(_this, \"_onMoveShouldSetResponderCapture\", function () {\n      return _this.isScrolling;\n    });\n    return _this;\n  }\n  _inherits(PagerView, _React$Component);\n  return _createClass(PagerView, [{\n    key: \"deducedLayoutDirection\",\n    get: function get() {\n      if (!this.props.layoutDirection || this.props.layoutDirection === 'locale') {\n        return I18nManager.isRTL ? 'rtl' : 'ltr';\n      } else {\n        return this.props.layoutDirection;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      return React.createElement(PagerViewView, _extends({}, this.props, {\n        ref: function ref(_ref) {\n          _this2.pagerView = _ref;\n        },\n        style: this.props.style,\n        layoutDirection: this.deducedLayoutDirection,\n        onPageScroll: this._onPageScroll,\n        onPageScrollStateChanged: this._onPageScrollStateChanged,\n        onPageSelected: this._onPageSelected,\n        onMoveShouldSetResponderCapture: this._onMoveShouldSetResponderCapture,\n        children: childrenWithOverriddenStyle(this.props.children)\n      }));\n    }\n  }]);\n}(React.Component);","map":{"version":3,"names":["React","Platform","Keyboard","I18nManager","childrenWithOverriddenStyle","PagerViewView","Commands","PagerViewCommands","PagerView","_React$Component","_this","_classCallCheck","_callSuper","arguments","_defineProperty","e","props","onPageScroll","OS","keyboardDismissMode","dismiss","onPageScrollStateChanged","isScrolling","nativeEvent","pageScrollState","onPageSelected","selectedPage","pagerView","setPage","setPageWithoutAnimation","scrollEnabled","setScrollEnabledImperatively","_inherits","_createClass","key","get","layoutDirection","isRTL","value","render","_this2","createElement","_extends","ref","style","deducedLayoutDirection","_onPageScroll","_onPageScrollStateChanged","_onPageSelected","onMoveShouldSetResponderCapture","_onMoveShouldSetResponderCapture","children","Component"],"sources":["/home/jeff/Documents/java/Skaihub/node_modules/react-native-pager-view/lib/module/PagerView.tsx"],"sourcesContent":["import React from 'react';\nimport { Platform, Keyboard } from 'react-native';\nimport { I18nManager } from 'react-native';\nimport type {\n  OnPageScrollEventData,\n  OnPageScrollStateChangedEventData,\n  OnPageSelectedEventData,\n} from './PagerViewNativeComponent';\nimport type * as ReactNative from 'react-native';\n\nimport type { NativeProps as PagerViewProps } from './PagerViewNativeComponent';\nimport { childrenWithOverriddenStyle } from './utils';\nimport PagerViewView, {\n  Commands as PagerViewCommands,\n} from './PagerViewNativeComponent';\n\n/**\n * Container that allows to flip left and right between child views. Each\n * child view of the `PagerView` will be treated as a separate page\n * and will be stretched to fill the `PagerView`.\n *\n * It is important all children are `<View>`s and not composite components.\n * You can set style properties like `padding` or `backgroundColor` for each\n * child. It is also important that each child have a `key` prop.\n *\n * Example:\n *\n * ```\n * render: function() {\n *   return (\n *     <PagerView\n *       style={styles.PagerView}\n *       initialPage={0}>\n *       <View style={styles.pageStyle} key=\"1\">\n *         <Text>First page</Text>\n *       </View>\n *       <View style={styles.pageStyle} key=\"2\">\n *         <Text>Second page</Text>\n *       </View>\n *     </PagerView>\n *   );\n * }\n *\n * ...\n *\n * var styles = {\n *   ...\n *   PagerView: {\n *     flex: 1\n *   },\n *   pageStyle: {\n *     alignItems: 'center',\n *     padding: 20,\n *   }\n * }\n * ```\n */\n\nexport class PagerView extends React.Component<PagerViewProps> {\n  private isScrolling = false;\n  pagerView: React.ElementRef<typeof PagerViewView> | null = null;\n\n  private _onPageScroll = (\n    e: ReactNative.NativeSyntheticEvent<OnPageScrollEventData>\n  ) => {\n    if (this.props.onPageScroll) {\n      this.props.onPageScroll(e);\n    }\n\n    // Not implemented on iOS yet\n    if (Platform.OS === 'android') {\n      if (this.props.keyboardDismissMode === 'on-drag') {\n        Keyboard.dismiss();\n      }\n    }\n  };\n\n  private _onPageScrollStateChanged = (\n    e: ReactNative.NativeSyntheticEvent<OnPageScrollStateChangedEventData>\n  ) => {\n    if (this.props.onPageScrollStateChanged) {\n      this.props.onPageScrollStateChanged(e);\n    }\n    this.isScrolling = e.nativeEvent.pageScrollState === 'dragging';\n  };\n\n  private _onPageSelected = (\n    e: ReactNative.NativeSyntheticEvent<OnPageSelectedEventData>\n  ) => {\n    if (this.props.onPageSelected) {\n      this.props.onPageSelected(e);\n    }\n  };\n\n  /**\n   * A helper function to scroll to a specific page in the PagerView.\n   * The transition between pages will be animated.\n   */\n  public setPage = (selectedPage: number) => {\n    if (this.pagerView) {\n      PagerViewCommands.setPage(this.pagerView, selectedPage);\n    }\n  };\n\n  /**\n   * A helper function to scroll to a specific page in the PagerView.\n   * The transition between pages will *not* be animated.\n   */\n  public setPageWithoutAnimation = (selectedPage: number) => {\n    if (this.pagerView) {\n      PagerViewCommands.setPageWithoutAnimation(this.pagerView, selectedPage);\n    }\n  };\n\n  /**\n   * A helper function to enable/disable scroll imperatively\n   * The recommended way is using the scrollEnabled prop, however, there might be a case where a\n   * imperative solution is more useful (e.g. for not blocking an animation)\n   */\n  public setScrollEnabled = (scrollEnabled: boolean) => {\n    if (this.pagerView) {\n      PagerViewCommands.setScrollEnabledImperatively(\n        this.pagerView,\n        scrollEnabled\n      );\n    }\n  };\n\n  private _onMoveShouldSetResponderCapture = () => {\n    return this.isScrolling;\n  };\n\n  private get deducedLayoutDirection() {\n    if (\n      !this.props.layoutDirection ||\n      //@ts-ignore fix it\n      this.props.layoutDirection === 'locale'\n    ) {\n      return I18nManager.isRTL ? 'rtl' : 'ltr';\n    } else {\n      return this.props.layoutDirection;\n    }\n  }\n\n  render() {\n    return (\n      <PagerViewView\n        {...this.props}\n        ref={(ref) => {\n          this.pagerView = ref;\n        }}\n        style={this.props.style}\n        layoutDirection={this.deducedLayoutDirection}\n        onPageScroll={this._onPageScroll}\n        onPageScrollStateChanged={this._onPageScrollStateChanged}\n        onPageSelected={this._onPageSelected}\n        onMoveShouldSetResponderCapture={this._onMoveShouldSetResponderCapture}\n        children={childrenWithOverriddenStyle(this.props.children)}\n      />\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}